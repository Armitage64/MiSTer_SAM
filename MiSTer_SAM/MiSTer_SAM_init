#!/bin/bash
trap "" HUP
trap "" TERM

start()
{
	#======== Start ========
	echo -n "Starting MiSTer Super Attract Mode... "
	
	#========= VARIABLES =========
	samtimeout=5
	mrsampath="/media/fat/Scripts/.MiSTer_SAM"
		
	# Read INI, Check for mount point presence
	while ! test -d /media/fat/
	do
		sleep 1
		count=`expr $count + 1`
		if test $count -eq 30; then
			echo "Mount timed out!"
        		exit 1
   		fi
	done
	if [ -f /media/fat/Scripts/MiSTer_SAM.ini ]; then
		. /media/fat/Scripts/MiSTer_SAM.ini
		IFS=$'\n'
	fi
	
	# Remove trailing slash from paths
	for var in mrsampath; do
		declare -g ${var}="${!var%/}"
	done


	# Kill running process
	if [ ! -z "$(pidof -o ${1} $(basename ${2}))" ]; then
		echo ""
		echo -n "Removing other running instances of $(basename ${2})..."
		kill -9 $(pidof -o ${1} $(basename ${2})) &>/dev/null
	fi
	
	# Kill old activity processes
	killall -q -9 MiSTer_SAM_joy.sh
	killall -q -9 MiSTer_SAM_mouse.sh
	killall -q -9 MiSTer_SAM_keyboard.sh
	killall -q -9 xxd
	
	# Setup done
	echo "DONE"
	echo "Press ENTER to continue"
	
	# Wait for system clock synchronization
	sleep 60
	# Reset activity logs
	rm -f /tmp/.SAM_Joy_Activity /tmp/.SAM_Mouse_Activity /tmp/.SAM_Keyboard_Activity
	touch /tmp/.SAM_Joy_Activity /tmp/.SAM_Mouse_Activity /tmp/.SAM_Keyboard_Activity
	
	# Spawn Joystick monitoring process per detected joystick device
	for joystick in /dev/input/js*; do
		${mrsampath}/MiSTer_SAM_joy.sh "${joystick}" &
	done
	
	# Spawn Mouse monitoring process
	${mrsampath}/MiSTer_SAM_mouse.sh &
	
	# Spawn Keyboard monitoring per detected keyboard device
	for keyboard in $(dmesg --decode --level info --kernel --color=never --notime --nopager | grep -e 'Keyboard' | grep -Eo 'hidraw[0-9]+'); do
		${mrsampath}/MiSTer_SAM_keyboard.sh "${keyboard}" &
	done
	
	# Check if system is idle for ${timeoutmins} - start Attract Mode if we are
	while :; do
		if [ "$(/bin/find /tmp/.SAM_Joy_Activity -mmin +${samtimeout})" ] && [ "$(/bin/find /tmp/.SAM_Mouse_Activity -mmin +${samtimeout})" ] && [ "$(/bin/find /tmp/.SAM_Keyboard_Activity -mmin +${samtimeout})" ]; then
			# Reset activity triggers
			echo "" |>/tmp/.SAM_Joy_Activity
			echo "" |>/tmp/.SAM_Mouse_Activity
			echo "" |>/tmp/.SAM_Keyboard_Activity
			"${mrsampath}/MiSTer_SAM.sh"
			# Reset activity triggers
			echo "" |>/tmp/.SAM_Joy_Activity
			echo "" |>/tmp/.SAM_Mouse_Activity
			echo "" |>/tmp/.SAM_Keyboard_Activity
		fi
		sleep 3
	done
}

stop() 
{
	echo -n "Stopping MiSTer SAM... "
	# Kill old activity processes
	killall -q -9 MiSTer_SAM_joy.sh &>/dev/null
	killall -q -9 MiSTer_SAM_mouse.sh &>/dev/null
	killall -q -9 MiSTer_SAM_keyboard.sh &>/dev/null
	killall -q -9 xxd
	
	# Kill running process
	if [ ! -z "$(pidof -o ${1} $(basename ${2}))" ]; then
		echo ""
		echo "Removing other running instances of $(basename ${2})..."
		kill -9 $(pidof -o ${1} $(basename ${2})) &>/dev/null
	fi
	
	echo "OK"
	echo "Press ENTER to continue"
}

case "$1" in
    start)
        start $$ "${0}"
        ;;
    stop)
        stop $$ "${0}"
        ;;
    restart)
        stop $$ "${0}"
        start $$ "${0}"
        ;;
    *)
        echo "Usage: /etc/init.d/S93mistersam {start|stop|restart}"
        exit 1
        ;;
esac
exit 0
